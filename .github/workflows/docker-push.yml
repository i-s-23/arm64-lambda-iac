name: Docker Build and Push

on:
  push:
    branches:
      - main
    paths:
      - 'src/lambda-test/**'

jobs:
  build:
    runs-on: ubuntu-22.04-arm64 # CICD料金を下げるためarm64のlerger-runnerを使用
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          role-to-assume: ${{ secrets.AWS_IAM_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
      - uses: aws-actions/amazon-ecr-login@v2.0.1
        id: login-ecr
      - name: Set up buildx
        uses: docker/setup-buildx-action@v3.6.1
      - run: echo "REPOSITORY_NAME=${GITHUB_REPOSITORY#${GITHUB_REPOSITORY_OWNER}/}" >> $GITHUB_ENV
      - name: Set up meta data
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}
          tags: |
            value=latest
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: lambda-test
      - name: docker build and push ECR
        uses: docker/build-push-action@v6.8.0
        with:
          context: src/lambda-test # Dockerfileのあるディレクトリ
          platforms: arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          # Actionsで使用するCacheの設定
          cache-from: type=gha
          cache-to: type=gha,mode=max
          provenance: false
      - name: update lambda function # LambdaにECRのイメージをデプロイ
        run: |
          aws lambda update-function-code --function-name ${{ env.FUNC_NAME }} --image-uri ${{ env.IMAGE_URI }}
        env:
          FUNC_NAME: lambda-test
          IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/lambda-test:latest